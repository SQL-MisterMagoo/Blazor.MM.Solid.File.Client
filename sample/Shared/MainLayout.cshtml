@inherits BlazorLayoutComponent
@implements IDisposable

<div class="cover-container d-flex h-100 p-3 mx-auto flex-column text-center">
    <header class="masthead ">
        <div class="row align-items-center">
            <div class="col-12">
                <h1>
                    Blazor/Solid File Browser
                </h1>
                <p>
                    @(Name ?? "")
                </p>
                <p>
                    @(SolidFileClient.SessionCredentials?.webId ?? "")
                </p>
            </div>
        </div>
    </header>
    <main class="inner cover rolemain">
        @Body
    </main>
    <footer class="mastfoot mt-auto">
        <div class="inner">
            <p>
                &copy; 2019 Mister Magoo
                <a href="https://solid.inrupt.com/" target="_blank">Solid (Inrupt)</a>
                |
                <a href="https://solid.community/" target="_blank">Solid (Community)</a>
                |
                <a href="https://blazor.net/" target="_blank">Blazor</a>
                @if (IsLoggedIn)
                {
                  <text>|</text>
                    <a href="#" onclick=@DoLogout>Logout</a>
                }
            </p>
        </div>
    </footer>
</div>

@functions {
  [Inject] IUriHelper UriHelper { get; set; }

  bool IsLoggedIn;
  string Name;

  protected override async Task OnInitAsync()
  {
      await base.OnInitAsync();
      SolidFileClient.LoginStateChanged += LoginChanged;
      SolidFileClient.NameChanged += NameChanged;
      IsLoggedIn = await SolidFileClient.IsLoggedIn();
      CheckState();
  }

  void NameChanged(string name)
  {
      Console.WriteLine($"Got name: {name}");
      this.Name = name;
      StateHasChanged();
  }

  void LoginChanged(bool LoggedIn)
  {
      Console.WriteLine($"LOGINCHANGED: {LoggedIn}");
      IsLoggedIn = LoggedIn;
      CheckState();
      if (!IsLoggedIn) Name = "";
  }

  void CheckState()
  {
      string CurrentUrl = UriHelper.GetAbsoluteUri().TrimEnd('#');
      bool OnHomePage = CurrentUrl.Equals(UriHelper.GetBaseUri(), StringComparison.OrdinalIgnoreCase);


      Console.WriteLine($"CheckState: {IsLoggedIn} on {CurrentUrl}, which is{(OnHomePage ? "" : " not")} the home page : {UriHelper.GetBaseUri()}");

      if (!IsLoggedIn && !OnHomePage)
      {
          UriHelper.NavigateTo("/");
      }
      if (IsLoggedIn && OnHomePage)
      {
          UriHelper.NavigateTo("/browse");
      }
  }

  async Task DoLogout()
  {
      await SolidFileClient.Logout();
  }
  void IDisposable.Dispose()
  {
      SolidFileClient.LoginStateChanged -= LoginChanged;
  }
}
